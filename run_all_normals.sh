#!/bin/bash

# ===================================================================================
#      批量生成ETH3D场景的真值法线 - 自动化脚本
# ===================================================================================
#
# 功能:
# 1. 自动遍历所有指定的ETH3D场景。
# 2. 首先使用较大的体素(0.04)进行快速但精度稍低的法线生成。
# 3. 然后使用较小的体素(0.02)进行速度较慢但精度更高的法线生成。
#
# ===================================================================================

# --- [ 1. 配置区 ] ---

# 根据您的截图筛选出的ETH3D场景
# (您可以根据需要添加或删除场景)
SCENE_NAMES=(
    "courtyard"
    "delivery_area"
    "electro"
    "facade"
    "kicker"
    "meadow"
    "office"
    "pipes"
    "terrace"
)

# 定义要运行的两轮体素大小
VOXEL_SIZES_TO_RUN=(0.04 0.02)

# 指定用于并行处理的CPU核心数
NUM_CORES_TO_USE=6

# --- [ 2. 主执行逻辑 ] ---

echo "🚀🚀🚀 开始为所有ETH3D场景批量生成真值法线 🚀🚀🚀"
echo "将要处理的场景: ${SCENE_NAMES[*]}"
echo "将要使用的体素大小: ${VOXEL_SIZES_TO_RUN[*]}"
echo "每个任务将使用 ${NUM_CORES_TO_USE} 个CPU核心"
echo "========================================================================"

# 外层循环遍历不同的体素大小
for voxel_size in "${VOXEL_SIZES_TO_RUN[@]}"; do

    echo
    echo "######################################################################"
    echo "###   开始新一轮处理, Voxel Size = ${voxel_size}"
    echo "######################################################################"

    # 内层循环遍历所有场景
    for scene_name in "${SCENE_NAMES[@]}"; do
        
        scene_path="data/${scene_name}"

        echo
        echo "--- [场景: ${scene_name} | 体素: ${voxel_size}] ---"

        if [ ! -d "${scene_path}" ]; then
            echo "  -> ❌ 警告: 找不到场景目录 '${scene_path}'，已跳过。"
            continue
        fi

        # 执行我们的Python法线生成脚本
        python generate_normals_from_gt.py \
            "${scene_path}" \
            --voxel_size "${voxel_size}" \
            --num_cores "${NUM_CORES_TO_USE}"

        # 检查上一个命令是否成功
        if [ $? -eq 0 ]; then
            echo "  -> ✅ [场景: ${scene_name}] 处理成功。"
        else
            echo "  -> ❌ 错误: [场景: ${scene_name}] 处理失败！请检查上面的日志。"
        fi
    done
done

echo
echo "# ======================================================================"
echo "# 🎉🎉🎉 所有场景和所有体素大小的法线生成任务均已尝试执行！ 🎉🎉🎉"
echo "# ======================================================================"